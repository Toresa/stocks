<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/bootstrap.min.css' />
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>

    <table class="table table-condensed col-md-6 offset-md-3">
      <tr>
        <th>Stock</th>
        <th class="text-end">Price</th>
      </tr>
      <tr>
        <td>Apple (aapl)</td>
        <td><div align="right" id="aapl">&nbsp;</div></td>
      </tr>
      <tr>
        <td>Microsoft (msft)</td>
        <td><div align="right" id="msft">&nbsp;</div></td>
      </tr>
      <tr>
        <td>Oracle (orcl)</td>
        <td ><div align="right" id="orcl">&nbsp;</div></td>
      </tr>
      <tr>
        <td>Facebook (fb)</td>
        <td ><div align="right" id="fb">&nbsp;</div></td>
      </tr>
    </table>
    <div class="col-md-4">
      <canvas id="myChart"></canvas>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.27.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@0.1.1"></script>
    <script>
    data = {
            labels: [1,2,3,4,5,6,7,8,9,10],
            //labels: [],
            datasets: [{
              label: '',
              //backgroundColor: 'rgb(255, 99, 132)',
              borderColor: 'rgb(255, 99, 132)',
              data:[1,2,3,4,5,6,7,8,9,10]
            }]
          };
    const config = {
      type: 'line',
      data,
      options: {
          scales: {
            xAxes: [{
                        type: 'time',
                        time: {
                            parser: 'YYYY-MM-DDTHH:mm:ss.sssZ',
                            unit: 'hour',
                            displayFormats: {
                                'minute': 'HH:mm:ss',
                                'hour': 'HH:mm:ss',
                                'minute': 'HH:mm:ss'
                            }
                        },
                        labels: {
                            source: 'auto'
                        }
                    }]
          }
      } //end options
    };

    </script>

    <script type="text/javascript" src="/javascripts/socket.io.js"></script>
    <script>
      var canvas = document.getElementById('myChart')
      var option = {
          showLines: true
      };
      var myChart = Chart.Line(canvas,{
          data:data,
        options:option
      });
      var socket = io();
      socket.on('tick', function(msg) {
        var currentPrice = msg.prices[msg.prices.length-1];
        var item = document.getElementById(msg.ticker);
        if (item.innerText < currentPrice) {
            item.className = "btn-success";
        } else {
          item.className = "btn-danger";
        }
        item.innerText = currentPrice;
        myChart.data.datasets[0].data = msg.prices;
        myChart.data.datasets[0].labels = msg.dates;
        myChart.data.datasets[0].label = msg.ticker;
        //myChart.data.datasets[0].ticks = msg.dates;
        myChart.update();
        setTimeout(function(){
             item.className = "btn-body";
         }, 1000);



      });//end tick
    </script>

  </body>
</html>
